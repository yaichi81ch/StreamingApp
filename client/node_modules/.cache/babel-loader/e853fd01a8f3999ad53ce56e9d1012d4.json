{"ast":null,"code":"import _classCallCheck from \"/Users/sakamotoyaichi/StreamingApp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sakamotoyaichi/StreamingApp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sakamotoyaichi/StreamingApp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sakamotoyaichi/StreamingApp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sakamotoyaichi/StreamingApp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sakamotoyaichi/StreamingApp/client/src/components/streams/StreamList.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStreams } from \"../../actions\";\n\nvar StreamList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamList, _React$Component);\n\n  function StreamList() {\n    _classCallCheck(this, StreamList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(StreamList).apply(this, arguments));\n  }\n\n  _createClass(StreamList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchStreams();\n    }\n  }, {\n    key: \"renderAdmin\",\n    value: function renderAdmin(stream) {\n      if (stream.userId === this.props.currentUserId) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        }, \"EDIT DELETE\");\n      }\n\n      ;\n    }\n  }, {\n    key: \"renderList\",\n    value: function renderList() {\n      var _this = this;\n\n      return this.props.streams.map(function (stream) {\n        return React.createElement(\"div\", {\n          className: \"item\",\n          key: stream.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"large middle icon camera\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, stream.title, React.createElement(\"div\", {\n          className: \"description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, stream.description)), _this.renderAdmin(stream));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props.streams);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Streams\"), React.createElement(\"div\", {\n        className: \"ui celled list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, this.renderList()));\n    }\n  }]);\n\n  return StreamList;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    streams: Object.values(state.streamReducer),\n    currentUserId: state.authReducer.userId\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams: fetchStreams\n})(StreamList);","map":{"version":3,"sources":["/Users/sakamotoyaichi/StreamingApp/client/src/components/streams/StreamList.js"],"names":["React","connect","fetchStreams","StreamList","props","stream","userId","currentUserId","streams","map","id","title","description","renderAdmin","console","log","renderList","Component","mapStateToProps","state","Object","values","streamReducer","authReducer"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,YAAT,QAA6B,eAA7B;;IAEMC,U;;;;;;;;;;;;;wCACgB;AAClB,WAAKC,KAAL,CAAWF,YAAX;AACD;;;gCAEWG,M,EAAQ;AAClB,UAAGA,MAAM,CAACC,MAAP,KAAkB,KAAKF,KAAL,CAAWG,aAAhC,EAA+C;AAC7C,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAP;AACD;;AAAA;AACF;;;iCAEY;AAAA;;AACX,aAAO,KAAKH,KAAL,CAAWI,OAAX,CAAmBC,GAAnB,CAAuB,UAAAJ,MAAM,EAAI;AACtC,eACE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAsB,UAAA,GAAG,EAAEA,MAAM,CAACK,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,SAAS,EAAC,0BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGL,MAAM,CAACM,KADV,EAEE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA8BN,MAAM,CAACO,WAArC,CAFF,CAFF,EAMG,KAAI,CAACC,WAAL,CAAiBR,MAAjB,CANH,CADF;AAUD,OAXM,CAAP;AAYD;;;6BAEQ;AACPS,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWI,OAAvB;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiC,KAAKQ,UAAL,EAAjC,CAFF,CADF;AAMD;;;;EAlCsBhB,KAAK,CAACiB,S;;AAqC/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAO;AACLX,IAAAA,OAAO,EAAEY,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACG,aAApB,CADJ;AAELf,IAAAA,aAAa,EAAEY,KAAK,CAACI,WAAN,CAAkBjB;AAF5B,GAAP;AAID,CALD;;AAOA,eAAeL,OAAO,CACpBiB,eADoB,EAEpB;AAAEhB,EAAAA,YAAY,EAAZA;AAAF,CAFoB,CAAP,CAGbC,UAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { fetchStreams } from \"../../actions\";\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderAdmin(stream) {\n    if(stream.userId === this.props.currentUserId) {\n      return <div>EDIT DELETE</div>;\n    };\n  }\n\n  renderList() {\n    return this.props.streams.map(stream => {\n      return (\n        <div className=\"item\" key={stream.id}>\n          <i className=\"large middle icon camera\" />\n          <div className=\"content\">\n            {stream.title}\n            <div className=\"description\">{stream.description}</div>\n          </div>\n          {this.renderAdmin(stream)}\n        </div>\n      );\n    });\n  }\n\n  render() {\n    console.log(this.props.streams);\n    return (\n      <div>\n        <h2>Streams</h2>\n        <div className=\"ui celled list\">{this.renderList()}</div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    streams: Object.values(state.streamReducer),\n    currentUserId: state.authReducer.userId\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchStreams }\n)(StreamList);\n"]},"metadata":{},"sourceType":"module"}